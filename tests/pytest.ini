[pytest]
# Test Discovery
testpaths = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Runtime Configuration
asyncio_mode = function
asyncio_default_fixture_loop_scope = function

# Output Configuration
log_cli = true
log_cli_level = INFO
console_output_style = progress
addopts =
    --verbose
    --color=yes
    --durations=10
    --maxfail=10
    --strict-markers
    --tb=short
    --cov=src
    --cov-report=xml
    --cov-report=term-missing

# Markers
markers =
    asyncio: mark test as async
    slow: mark test as slow running (>1s)
    integration: mark test as integration test
    unit: mark test as unit test
    repository: mark test as repository test
    api: mark test as API test

# Warning Filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::pytest.PytestDeprecationWarning
    ignore::ResourceWarning
    ignore::RuntimeWarning
    ignore::UserWarning
    ignore::ImportWarning
    # Pydantic specific warnings
    ignore::DeprecationWarning:pydantic.*:
    ignore:.*json_encoders.*:DeprecationWarning
    ignore:.*class-based `config`.*:DeprecationWarning
    # Pytest-asyncio warnings
    ignore:.*asyncio_default_fixture_loop_scope.*:PytestDeprecationWarning

# Custom Settings
minversion = 6.0
required_plugins =
    pytest-asyncio
    pytest-cov